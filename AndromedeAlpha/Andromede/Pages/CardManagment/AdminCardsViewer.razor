@*
    *
    * (c) 2021 Copyright Andromede
    * Unauthorized use and disclosure strictly forbidden
    *
*@


@page "/CardManagment/Restorer/Cards/{RestorerId:int}"

@inject NavigationManager NavManager
@inject IModalService Modal
@inject Microsoft.Extensions.Configuration.IConfiguration Configuration
@inject IRestorerRepository RestorerRepository

@inherits OwningComponentBase

@using Andromede.Pages.Modals
@using Microsoft.Extensions.Configuration

<AuthorizeView>
    <Authorized Context="_authContext">
        @if (_restorer != null && RestorerId == int.Parse(_authContext.User.Identity.Name) && isRestorerSubscribed())
        {
            <div class="top-row centered-title">
                <img class="small centered-image bottom-divider" src="img/andromede_white_bg.png" />
                <h1 class="to-hide-for-mobile">@_restorer.RestaurantName</h1>
                <h3 class="to-hide-for-mobile">Bienvenue dans la gestion des cartes</h3>
                <h5 class="bottom-divider">Vous pouvez ici ajouter, modifier ou supprimer une carte.</h5>
                @if (!RestorerRepository.GetCards(RestorerId).Any())
                {
                    <img src="img/ico/add_card.png" class="no-card-image" @onclick="UploadACard" />
                    <h4 style="margin-top : 20%">Vous n'avez aucune carte pour le moment.</h4>
                    <h5>Veuillez cliquer sur l'icone : <img src="img/ico/add_card.png" class="add-card-image" /> afin d'ajouter votre première carte</h5>
                }
                @foreach (Card aCard in RestorerRepository.GetCards(RestorerId))
                {
                    <div class="row">
                        <div class="col-2"></div>
                        <div class="col-8">
                            <div class="horizontal-division"></div>
                        </div>
                        <div class="col-2"></div>
                    </div>
                    <div class="row top-divider">
                        <div class="col-sm-4"></div>
                        <div class="col-sm-4">
                            <h3><strong>@aCard.CardName</strong></h3>
                        </div>
                        <div class="col-sm-4"></div>
                    </div>
                    <div class="row">
                        <div class="col-2"></div>
                        <div class="col-8">
                            <iframe src=@(Configuration.GetValue<string>("CardsFileURL") + $"{aCard.CardId}.pdf") class="pdf-card-viewer" type='application/pdf' />
                        </div>
                        <div class="col-2"></div>
                    </div>
                    <div class="row bottom-divider">
                        <div class="col-4">
                            <span @onclick="@(() => UpdateCurrentCard(aCard.CardId, aCard.CardName))" class="oi oi-pencil card-management-button"></span>
                        </div>
                        <div class="col-4">
                            <img src="img/ico/add_card.png" class="add-card-image" @onclick="UploadACard" />
                        </div>
                        <div class="col-4">
                            <span @onclick="@(() => DeleteCurrentCard(aCard.CardId, aCard.CardName))" class="oi oi-trash card-management-button"></span>
                        </div>
                    </div>

                }
            </div>
        }
        else
        {
            <Andromede.Pages.NotAuthorizedViewer />
        }
    </Authorized>
    <NotAuthorized>
        <Andromede.Pages.NotAuthorizedViewer />
    </NotAuthorized>
</AuthorizeView>


@code
{
    [Parameter]
    public int RestorerId { get; set; }

    private Restorer _restorer;

    protected override void OnInitialized()
    {
        _restorer = RestorerRepository.GetRestorerWithId(RestorerId);
    }

    bool isRestorerSubscribed()
    {
        if (_restorer != null)
        {
            return _restorer.Subscribed;
        }
        return false;
    }

    void DeleteCurrentCard(int iCardId, string iCardName)
    {
        var aParameters = new ModalParameters();
        aParameters.Add(nameof(Card.CardId), iCardId);
        aParameters.Add(nameof(Restorer.RestorerId), _restorer.RestorerId);
        var anOptions = new ModalOptions()
        {
            HideCloseButton = true,
            Animation = ModalAnimation.FadeInOut(0.5)
        };
        Modal.Show<DeleteCard>($"Supprimer : {iCardName}", aParameters, anOptions);
    }

    void UpdateCurrentCard(int iCardId, string iCardName)
    {
        var aParameters = new ModalParameters();
        aParameters.Add(nameof(Card.CardId), iCardId);
        aParameters.Add(nameof(Restorer), _restorer);
        Modal.Show<UpdateCard>($"Modifier : {iCardName}", aParameters);
    }

    void UploadACard()
    {
        var aParameters = new ModalParameters();
        aParameters.Add(nameof(Restorer), _restorer);
        Modal.Show<UploadCard>("Ajouter une carte", aParameters);
    }
}

