@*
    *
    * (c) 2021 Copyright Andromede
    * Unauthorized use and disclosure strictly forbidden
    *
*@

@page "/CardManagment/AdminCustomerView/Cards/{RestorerId:int}"

@inject Microsoft.Extensions.Configuration.IConfiguration Configuration
@inject IRestorerRepository RestorerRepository

@inherits OwningComponentBase

@using Microsoft.Extensions.Configuration

<AuthorizeView>
    <Authorized Context="_authContext">
        @if (_restorer != null && RestorerId == int.Parse(_authContext.User.Identity.Name) && isRestorerSubscribed())
        {
            <div class="top-row centered-title">
                <h2 class="to-hide-for-mobile bottom-divider" style="margin-bottom:20px">@_restorer.RestaurantName</h2>
                @if (!RestorerRepository.GetCards(_restorer.RestorerId).Any())
                {
                    <h3 style="margin-top:10%">Aucune carte disponible</h3>
                    <img src="img/ico/sad_boy.png" width="150" />
                }
                @foreach (Card aCard in RestorerRepository.GetCards(_restorer.RestorerId))
                {
                    <div class="row" style="margin-bottom:20px">
                        <div class="col-2"></div>
                        <div class="col-8">
                            <a class="btn btn-dark" href=@(Configuration.GetValue<string>("CardsFileURL") + $"{aCard.CardId}.pdf") target="_blank">@aCard.CardName</a>
                        </div>
                        <div class="col-2"></div>
                    </div>
                }
            </div>
        }
        else
        {
            <NotAuthorizedViewer />
        }
    </Authorized>
    <NotAuthorized>
        <NotAuthorizedViewer />
    </NotAuthorized>
</AuthorizeView>
<style>
    body {
        background-image: url('img/cards_background.png');
        background-position: center center;
        background-repeat: no-repeat;
        background-attachment: fixed;
        background-size:cover;
    }
</style>
@code {
    [Parameter]
    public int RestorerId { get; set; }

    private Restorer _restorer;

    protected override void OnInitialized()
    {
        _restorer = RestorerRepository.GetRestorerWithId(RestorerId);
    }

    bool isRestorerSubscribed()
    {
        if (_restorer != null)
        {
            return _restorer.Subscribed;
        }
        return false;
    }
}