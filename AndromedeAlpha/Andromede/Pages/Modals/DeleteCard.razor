@*
    *
    * (c) 2021 Copyright Andromede
    * Unauthorized use and disclosure strictly forbidden
    *
*@

@inject IJSRuntime jsRuntime
@inject NavigationManager NavManager
@inject ICardRepository CardRepository

@inherits OwningComponentBase

<div class="row">
    <div class="col-2"></div>
    <div class="col-5">
        <button class="btn btn-andromede" @onclick="DeleteCurrentCard">Confirmer</button>
    </div>
    <div class="col-3">
        <button class="btn btn-andromede" @onclick="CloseDeleteCardModal">Annuler</button>
    </div>
    <div class="col-2"></div>
</div>




@code {
    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }

    [Parameter] public int CardId { get; set; }

    private Card _restorerCard;
    private string _filePath;

    protected override void OnInitialized()
    {
        _restorerCard = CardRepository.GetCardWithId(CardId);
        _filePath = $"wwwroot/Customer/Cards/{CardId}.pdf";
    }

    async Task DeleteCurrentCard()
    {
        CardRepository.DeleteCard(CardId);
        if (System.IO.File.Exists(_filePath))
        {
            System.IO.File.Delete(_filePath);
        }
        NavManager.NavigateTo(NavManager.Uri, forceLoad: true);
        await ModalInstance.CloseAsync(ModalResult.Ok<Card>(_restorerCard));
    }

    async Task CloseDeleteCardModal()
    {
        await ModalInstance.CancelAsync();
    }
}
