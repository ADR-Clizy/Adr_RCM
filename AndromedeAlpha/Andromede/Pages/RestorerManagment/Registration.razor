@*
    *
    * (c) 2021 Copyright Andromede
    * Unauthorized use and disclosure strictly forbidden
    *
*@

@page "/RestorerManagment/Registration"

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavManager
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage
@inject IRestorerRepository RestorerRepository

@inherits OwningComponentBase

<div class="top-row centered-title ">
    <img class="small bottom-divider" src="img/andromede_white_bg.png" />
    <h6><span class="oi oi-warning form-icon"></span>Une souscription à Andromede Alpha est nécessaire afin de pouvoir accéder à la numérisation des cartes</h6>
    <EditForm Model="@_restorer" OnValidSubmit="@RestorerRegistration" id="registration-form">
        <DataAnnotationsValidator />
        <div class="form-row">
            <div class="form-group col-sm-10">
                <label for="restaurantName">
                    <img class="form-img" src="img/ico/fork_spoon.png" />
                    Nom du restaurant
                </label>
                <InputText type="text" class="form-control" id="restaurantName" @bind-Value="_restorer.RestaurantName" />
                <ValidationMessage For="@(() => _restorer.RestaurantName)" />
            </div>
            <div class="col-sm-2"></div>
        </div>
        <div class="form-row">
            <div class="form-group col-sm-5">
                <label for="userEmail">
                    <img class="form-img" src="img/ico/mail.png">
                    Addresse mail
                </label>
                <InputText type="email" class="form-control" id="userEmail" placeholder="nom@exemple.com" @bind-Value="_restorer.EmailAddress" />
                <ValidationMessage For="@(() => _restorer.EmailAddress)" />
            </div>
            <div class="form-group col-sm-5">
                <label for="userPhoneNumber">
                    <span class="oi oi-phone form-icon"></span>
                    Numéro de téléphone
                </label>
                <InputText type="tel" class="form-control" id="userPhoneNumber" @bind-Value="_restorer.PhoneNumber" />
                <ValidationMessage For="@(() => _restorer.PhoneNumber)" />
            </div>
            <div class="col-sm-2"></div>
        </div>
        <div class="form-row">
            <div class="form-group col-sm-5">
                <label for="userPassword">
                    <span class="oi oi-key form-icon"></span>
                    Mot de passe
                </label>
                <InputText type="@_inputType" class="form-control" id="userPassword" @bind-Value="_restorer.Password" />
                <ValidationMessage For="@(() => _restorer.Password)" />
            </div>
            <div class="form-group col-sm-5">
                <label for="confirmedUserPassword">
                    <span class="oi oi-key form-icon"></span>
                    Confirmer le mot de passe
                </label>
                <div>
                    <InputText type="@_inputType" class="form-control" id="confirmedUserPassword" @bind-Value="_confirmedPassword" />
                    <ValidationMessage For="@(() => _restorer.Password)" />
                    <small id="missMatchedPasswords" class="form-alert form-text">@_missMatchedPasswords</small>
                </div>
            </div>
            <div class="form-group col-sm-2">
                <img id="password-eye-registration" src="img/ico/password_eye.png" @onclick="ShowPassword" />
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-sm-10">
                <button type="submit" class="btn btn-andromede">S'inscrire</button>
                <p id="existingAccount" class="form-alert form-text">@_existingAccount</p>
                @if (_isLoading)
                {
                    <div class="spinner-border text-andromede" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                }
            </div>
            <div class="col-sm-2"></div>
        </div>
    </EditForm>
</div>
<div>
    <a href="RestorerManagment/Login" class="subform-registration-link">Déjà inscrit ?</a>
</div>


@code {
    private string _confirmedPassword;
    private string _missMatchedPasswords;
    private string _existingAccount;
    private string _hashedPassword;
    private bool _isLoading;
    private string _inputType;

    private Restorer _restorer;
    private Restorer _restorerCopy;

    protected override void OnInitialized()
    {
        _restorer = new Restorer();
        _restorerCopy = new Restorer();
        _restorer.RestaurantState = "France";
        _inputType = "password";
        _isLoading = false;
    }

    private async Task RestorerRegistration()
    {
        _isLoading = true;
        _missMatchedPasswords = "";
        _existingAccount = "";
        if (_confirmedPassword.Length == 0)
        {
            _missMatchedPasswords = "Veuillez confirmer votre mot de passe";
        }
        else if (IsEmailAdressExisting())
        {
            _existingAccount = "Un compte avec cette adresse mail existe déjà";
        }
        else if (!IsPasswordConfirmed())
        {
            _missMatchedPasswords = "Les mots de passe ne correspondent pas";
        }
        else
        {
            CopyRestorerData();
            _restorerCopy = RestorerRepository.NewRestorer(_restorerCopy);
            ((AndromedeAuthenticationStateProvider)AuthenticationStateProvider).RestorerIsAuthenticated(_restorerCopy.RestorerId);
            await LocalStorage.SetItemAsync("sId", _restorerCopy.RestorerId);
            await LocalStorage.SetItemAsync("sEmailAddress", _restorerCopy.EmailAddress);
            //Start the Session
            NavManager.NavigateTo("/RestorerManagment/Subscription", forceLoad: true);
        }
        _isLoading = false;
    }

    void CopyRestorerData()
    {
        _restorerCopy.RestorerId = _restorer.RestorerId;
        _restorerCopy.FirstName = "";
        _restorerCopy.LastName = "";
        _restorerCopy.PhoneNumber = _restorer.PhoneNumber;
        _restorerCopy.RestaurantSiretNumber = "";
        _restorerCopy.RestaurantName = _restorer.RestaurantName;
        _restorerCopy.RestaurantState = _restorer.RestaurantState;
        _restorerCopy.EmailAddress = _restorer.EmailAddress;
        _restorerCopy.Password = _hashedPassword;
    }

    private bool IsPasswordConfirmed()
    {
        _hashedPassword = BCryptNet.HashPassword(_restorer.Password);
        return BCryptNet.Verify(_confirmedPassword, _hashedPassword);
    }

    private bool IsEmailAdressExisting()
    {
        return RestorerRepository.GetRestorerWithEmailAddress(_restorer.EmailAddress) != null;
    }

    private void ShowPassword()
    {
        if (_inputType == "password")
            _inputType = "text";
        else
            _inputType = "password";
    }
}
